
ngx_tools_module
================

NOTES FOR END USERS
-------------------

If you are not developing your own module, but have been informed that this module
is required by another modules, then the only thing you need to know is how to
include this module.  To do this, you need to do two things:

1) Run the build script (in $src/auto/build). This only needs to be done once, though
if you make any changes to any of the files that are used to generate the files (in 
the $src/auto/* directories, then in order for those changes to take effect you need
to run the build script again.

2) Include the path to this source in your configure call - so your installation 
command should look something like this :

> cd /path/to/src_dir
> tar -xzf ngx_tools_module.tar.gz
> tar -xzf ngx_other_module.tar.gz
> ./configure                                   \
    --with-module=/path/to/tools/module/dir     \
    --with-module=/path/to/other/module/dir     \
    # other options here
> make
> make install


The key difference being the addition of the --with-module=/path/to/tools/module/dir.




NOTES FOR DEVELOPERS
--------------------

NOTE : This module is designed for developers.  If you are not developing a
module for Nginx and don't intend to, then the rest of this readme file probably
won't be of interest to you.


OVERVIEW
--------

Nginx is a fantastic web server, and its modular design makes it easy to add
additional features to the core server if you have the skills to program in C.

Often, developers will use similar methods to achieve different results, which
can in effect waste development time (and can result in larger code and
executable sizes).  Many tools to reduce this reproduction of code are included
in the core files, provided by Igor Sysoev, but there are also many additional
generic functions / features that could be included to further reduce repetition
by developers which aren't.

This module is an attempt to help remedy that situation, by providing a number of
useful generic functions that can be used in other modules.  These functions are
provided themselves in a modular fashion, so you do not need to compile all the
included functions into your final executable just to use a few functions.



USAGE
-----

In order to use the features of this module you need to do these things

- Inside the config file of your module, add a macro definition (i.e. -D[macro])
to the CFLAGS variable for each of the submodules you wish to use.  e.g.

CFLAGS="$CFLAGS -DNGX_HTTP_SET_VAR_TOOLS"


- Add the line

#include    <ngx_tools_module.h>

to your own module.


- Include the tools module as described in the NOTES FOR END USERS section above.



CURRENT SUBMODULES
------------------

The number of modules currently available is small, but should increase with time.


name        macro definition            description
----        ----------------            -----------
set_var     NGX_HTTP_SET_VAR_TOOLS      functions for assigning values to variables



FEEDBACK / CONTRIBUTING
-----------------------

I've tried to make the code error-free, but there may well be bugs in the code.
If you find any, please let me know and I'll try to fix them (or better still,
send me a patch!).

Any developers who believe that code they've written might well be reusable by 
others are encouraged to submit their code for inclusion in this module. If code
does indeed seem like it could be used in a generic way, then there's a high
probability that it will be included (so long as it's well-written of course).



CONTACT
-------

Feel free to contact me at ngx.eugaia AT gmail DOT com



